package net.nosegrind.restrpc

import org.springframework.dao.DataIntegrityViolationException

class ApidocController {

	def grailsApplication

	index(){
		redirect(action:'show')
	}
	
	def show(){
		grailsApplication.controllerClasses.each { controllerClass ->
			def controller = grailsApplication.getArtefactByLogicalPropertyName('Controller', controllerName)
			def methods = controller?.getClazz().metaClass.methods*.name.sort().unique()
			
			def json = []
			
			methods.each(){ method ->
				def action = controller?.getClazz()?.getMethod(actionName)
				
				if (action.isAnnotationPresent(Api)) {
					def api = action.getAnnotation(Api)
					def path = "${controllerName}/${actionName}"
					def desc = api.description
					
					// Params
					def paramList = []
					def params = api.params
					params.each{ p ->
						if (p.isAnnotationPresent(Variable)) {
							def param = p.getAnnotation(Variable)
							def list = [type:param.paramType,name:param.name,description:param.description,required:param.required,values:[]]
							param.value.each{ p2 ->
								if (p2.isAnnotationPresent(Param)) {
									def param2 = p2.getAnnotation(Param)
								}
							}
						}

					}
					
					
					def returns = api.returns
					def errors = api.errors
					
				}
			}
		}
	}

}
